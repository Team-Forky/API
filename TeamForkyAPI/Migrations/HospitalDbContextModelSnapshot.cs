// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamForkyAPI.Data;

namespace TeamForkyAPI.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamForkyAPI.Models.Patient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Birthday = "02/16/1991",
                            CheckIn = new DateTime(2020, 4, 13, 15, 35, 38, 99, DateTimeKind.Local).AddTicks(4759),
                            Name = "Teddy",
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Birthday = "03/23/1986",
                            CheckIn = new DateTime(2020, 4, 13, 15, 35, 38, 102, DateTimeKind.Local).AddTicks(7319),
                            Name = "Joseph",
                            Status = 2
                        });
                });

            modelBuilder.Entity("TeamForkyAPI.Models.PatientResources", b =>
                {
                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int>("ResourcesID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("PatientID", "ResourcesID");

                    b.HasIndex("ResourcesID");

                    b.ToTable("PatientResources");
                });

            modelBuilder.Entity("TeamForkyAPI.Models.Resources", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourcesType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "02/16/1991",
                            Name = "Teddy",
                            ResourcesType = 0
                        },
                        new
                        {
                            ID = 2,
                            Description = "02/16/1991",
                            Name = "Joseph",
                            ResourcesType = 2
                        });
                });

            modelBuilder.Entity("TeamForkyAPI.Models.PatientResources", b =>
                {
                    b.HasOne("TeamForkyAPI.Models.Patient", "Patient")
                        .WithMany("PatientResources")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamForkyAPI.Models.Resources", "Resources")
                        .WithMany("PatientResources")
                        .HasForeignKey("ResourcesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
